/**
 * @license
 * Copyright 2021 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

foam.CLASS({
  package: 'foam.dao',
  name: 'FUIDAO',
  extends: 'foam.dao.ProxyDAO',

  documentation: `
    DAO Decorator which sets a specified property\'s value with an global unique ID (generated by UIDGenerator) on DAO.put()
    if the value is set to the default value.
  `,

  implements: [
    'foam.nanos.boot.NSpecAware'
  ],

  javaImports: [
    'foam.util.SafetyUtil',
    'foam.util.UIDGenerator'
  ],

  properties: [
    {
      class: 'String',
      name: 'property',
      value: 'id'
    },
    {
      /** @private */
      name: 'propertyInfo',
      hidden: true,
      javaType: 'foam.core.PropertyInfo',
      javaInfoType: 'foam.core.AbstractObjectPropertyInfo',
      javaFactory: 'return (foam.core.PropertyInfo)(getOf().getAxiomByName(getProperty()));'
    },
    {
      class: 'Object',
      name: 'uIDGenerator',
      javaType: 'foam.util.UIDGenerator',
      javaFactory: `
        return new UIDGenerator.Builder(getX())
          .setSalt(getNSpec().getName())
          .build();
      `
    }
  ],

  methods: [
    {
      name: 'put_',
      javaCode: `
        var id = getPropertyInfo().get(obj);
        var klass = getPropertyInfo().getValueClass();
        if ( klass == String.class && SafetyUtil.isEmpty((String) id) ) {
          getPropertyInfo().set(obj, getUIDGenerator().getNextString());
        } else if ( klass == long.class && ((long) id) == 0L ) {
          getPropertyInfo().set(obj, getUIDGenerator().getNextLong());
        }
        return getDelegate().put_(x, obj);
      `
    },
  ],

  axioms: [
    {
      buildJavaClass: function(cls) {
        cls.extras.push(`
          public FUIDAO(DAO delegate) {
            setDelegate(delegate);
          }
        `);
      },
    },
  ],
});
