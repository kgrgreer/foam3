p({
  "class": "foam.nanos.cron.Cron",
  "enabled": false,
  "schedule": {
    "class": "foam.nanos.cron.CronSchedule",
    "minute": -1,
    "hour": -1,
    "dayOfMonth": -1,
    "month": -1,
    "dayOfWeek": -1,
    "second": 30
  },
  "scheduledTime": "2019-09-09T16:56:30.000Z",
  "id": "Email Service",
  "description": "Re-send UNSENT emails in emailMessageDAO",
  "code":
  """
    import foam.dao.DAO;
    import foam.dao.ArraySink;
    import foam.nanos.notification.email.EmailMessage;
    import foam.nanos.notification.email.Status;
    import static foam.mlang.MLang.*;

    DAO emailMessageDAO = (DAO) x.get("emailMessageDAO");
    emailMessages = ((ArraySink)
      emailMessageDAO
        .where(EQ(EmailMessage.STATUS, Status.UNSENT))
        .orderBy(foam.nanos.notification.email.EmailMessage.CREATED)
        .select(new ArraySink()))
        .getArray();
    emailService = x.get("email");

    // SES limit - 14/s
    second = 1000;
    limit = emailService.getRateLimit();

    endTime = System.currentTimeMillis() + second;
    count = 1;
    for ( EmailMessage emailMessage : emailMessages ) {
      emailMessageDAO.put(emailService.sendEmail(x, emailMessage));
      count++;
      if ( limit > 0 &&
           count > limit ) {
        remaining = endTime - System.currentTimeMillis();
        if ( remaining > 0 ) {
          Thread.sleep(remaining);
        }
        count = 1;
        endTime = System.currentTimeMillis() + second;
      }
    }
  """
})
p({
  "class": "foam.nanos.cron.Cron",
  "enabled": false,
  "schedule": {
    "class": "foam.nanos.cron.CronSchedule",
    "minute": -1,
    "hour": -1,
    "dayOfMonth": -1,
    "month": -1,
    "dayOfWeek": -1,
    "second": 30
  },
  "scheduledTime": "2019-09-09T16:56:30.000Z",
  "id": "EmailFolderAgent",
  "description": "Retrieve Email Folder Messages",
  "code":
  """
    new foam.nanos.notification.email.EmailFolderAgent(x).execute(x);
  """
})
