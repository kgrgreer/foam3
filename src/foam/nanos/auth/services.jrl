p({
  "class":"foam.nanos.boot.NSpec",
  "name":"localServiceProviderDAO",
  "serviceScript":
  """
    return new foam.dao.EasyDAO.Builder(x)
      .setPm(true)
      .setAuthorize(false)
      .setOf(foam.nanos.auth.ServiceProvider.getOwnClassInfo())
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("capabilities")
      .setValidated(true)
      .setInnerDAO((foam.dao.DAO) x.get("localCapabilityDAO"))
      .setDecorator(
        new foam.dao.FilteredDAO.Builder(x)
          .setPredicate(foam.mlang.MLang.INSTANCE_OF(foam.nanos.auth.ServiceProvider.class))
          .setDelegate(new foam.dao.NullDAO.Builder(x).setOf(foam.nanos.auth.ServiceProvider.getOwnClassInfo()).build())
        .build())
      .build();
  """,
  "client":"{\"of\":\"foam.nanos.auth.ServiceProvider\"}"
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"serviceProviderDAO",
  "serve":true,
  "serviceScript":
  """
    return new foam.nanos.auth.AuthorizationDAO.Builder(x)
      .setDelegate((foam.dao.DAO) x.get("localServiceProviderDAO"))
      .setAuthorizer(new foam.nanos.auth.StandardAuthorizer("serviceproviderdao"))
      .build();
  """,
  "client":"{\"of\":\"foam.nanos.auth.ServiceProvider\"}"
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"commonPasswordDAO",
  "lazy":false,
  "serve":true,
  "authenticate":false,
  "serviceScript":`
    return new foam.dao.EasyDAO.Builder(x)
      .setPm(true)
      .setAuthorizer(new foam.nanos.auth.GlobalReadAuthorizer("commonPasswordDAO"))
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("commonPasswords")
      .setOf(foam.nanos.auth.CommonPassword.getOwnClassInfo())
      .build();
    `,
  "client":"{\"of\":\"foam.nanos.auth.CommonPassword\"}"
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "resetPasswordService",
  "serve": true,
  "authenticate": false,
  "boxClass": "foam.nanos.auth.resetPassword.ResetPasswordServiceSkeleton",
  "serviceClass": "foam.nanos.auth.resetPassword.ServerResetPasswordService",
  "client":
    """
      {
        "class": "foam.nanos.auth.resetPassword.ClientResetPasswordService",
        "delegate": {
          "class": "foam.box.SessionClientBox",
          "delegate": {
            "class": "foam.box.HTTPBox",
            "url": "service/resetPasswordService"
          }
        }
      }
    """
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"credentialsDAO",
  "serve":true,
  "serviceScript":`
    return new foam.dao.EasyDAO.Builder(x)
      .setFuid(true)
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("credentials")
      .setOf(foam.nanos.auth.Credential.getOwnClassInfo())
      .build();
    `,
  "client":"{\"of\":\"foam.nanos.auth.Credential\"}"
})
