p({
  "class": "foam.nanos.boot.NSpec",
  "name": "analyticEventDAO",
  "serve": true,
  "authenticate": false,
  "serviceScript": """
    return new foam.dao.EasyDAO.Builder(x)
      .setFixedSize(new foam.dao.FixedSizeDAO.Builder(x)
        .setComparator(foam.mlang.MLang.DESC(foam.nanos.analytics.AnalyticEvent.TIMESTAMP))
        .setSize(1000000)
        .build())
      .setOf(foam.nanos.analytics.AnalyticEvent.getOwnClassInfo())
      .setPm(true)
      .setFuid(true)
      .setAuthorize(true)
      .setSAF(true)
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("analyticEvents")
      .setDecorator(
        new foam.nanos.analytics.AnalyticEventOMDAO.Builder(x).setDelegate(
        new foam.nanos.analytics.AnalyticEventTimestampDAO.Builder(x).setDelegate(
        new foam.dao.NullDAO(x, foam.nanos.analytics.AnalyticEvent.getOwnClassInfo())).build()).build())
      .build()
      .addPropertyIndex(new foam.core.PropertyInfo[] { foam.nanos.analytics.AnalyticEvent.NAME })
      .addPropertyIndex(new foam.core.PropertyInfo[] { foam.nanos.analytics.AnalyticEvent.SESSION_ID })
      .addPropertyIndex(new foam.core.PropertyInfo[] { foam.nanos.analytics.AnalyticEvent.TIMESTAMP })
      .addPropertyIndex(new foam.core.PropertyInfo[] { foam.nanos.analytics.AnalyticEvent.TRACE_ID })
      .orderBy(foam.mlang.MLang.DESC(foam.nanos.analytics.AnalyticEvent.TIMESTAMP));
  """,
  "client":
  """
  {
    "of":"foam.nanos.analytics.AnalyticEvent"
  }
  """
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"postToWindow",
  "serve":true,
  "lazyClient": false,
  "authenticate":false,
  "client":"{ \"class\": \"foam.nanos.analytics.PostToWindow\" }"
})
