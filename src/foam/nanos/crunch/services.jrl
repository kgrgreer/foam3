p({
  "class":"foam.nanos.boot.NSpec",
  "name":"capabilityCategoryDAO",
  "lazy":true,
  "serve":true,
  "serviceScript":"""
    return new foam.dao.EasyDAO.Builder(x)
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("capabilityCategories")
      .setOf(foam.nanos.crunch.CapabilityCategory.getOwnClassInfo())
      .setPm(true)
      .build()
      .addPropertyIndex(new foam.core.PropertyInfo[] { foam.nanos.crunch.CapabilityCategoryCapabilityJunction.SOURCE_ID, foam.nanos.crunch.CapabilityCategoryCapabilityJunction.TARGET_ID })
      .addPropertyIndex(new foam.core.PropertyInfo[] { foam.nanos.crunch.CapabilityCategoryCapabilityJunction.TARGET_ID });
  """,
  "client":"{\"of\":\"foam.nanos.crunch.CapabilityCategory\"}"
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"localCapabilityDAO",
  "lazy":true,
  "serve":false,
  "serviceScript":"""
    return new foam.dao.EasyDAO.Builder(x)
      .setAuthorize(false)
      .setGuid(true)
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("capabilities")
      .setOf(foam.nanos.crunch.Capability.getOwnClassInfo())
      .setPm(true)
      .build()
      .addPropertyIndex(new foam.core.PropertyInfo[] { foam.nanos.crunch.Capability.PERMISSIONS_INTERCEPTED })
      .addPropertyIndex(new foam.core.PropertyInfo[] { foam.nanos.crunch.Capability.NAME });

  """
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"capabilityDAO",
  "lazy":true,
  "serve":true,
  "serviceScript":"""
    dec = new foam.dao.NullDAO(x, foam.nanos.crunch.Capability.getOwnClassInfo());
    dec = new foam.nanos.crunch.CapabilityAvailabilityDAO(x, dec);
    return new foam.dao.EasyDAO.Builder(x)
      .setInnerDAO(x.get("localCapabilityDAO"))
      .setDecorator(dec)
      .setOf(foam.nanos.crunch.Capability.getOwnClassInfo())
      .setPm(true)
      .build();
  """,
  "client":"""
    {
      "of":"foam.nanos.crunch.Capability",
      "cache": false
    }
  """
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "capabilityCategoryCapabilityJunctionDAO",
  "lazy": true,
  "serve": true,
  "description": "DAO responsible for storing capabilities' categories.",
  "serviceScript": """
    return new foam.dao.EasyDAO.Builder(x)
      .setAuthorizer(new foam.nanos.auth.GlobalReadAuthorizer("capabilityCategoryCapabilityJunction"))
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("capabilityCategoryCapabilityJunction")
      .setOf(foam.nanos.crunch.CapabilityCategoryCapabilityJunction.getOwnClassInfo())
      .setPm(true)
      .build();
  """,
  "client": "{\"of\":\"foam.nanos.crunch.CapabilityCategoryCapabilityJunction\", \"remoteListenerSupport\": false}"
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"userCapabilityJunctionDAO",
  "serve":true,
  "serviceScript":"""
    return new foam.dao.EasyDAO.Builder(x)
      .setAuthorize(false)
      .setInnerDAO(x.get("bareUserCapabilityJunctionDAO"))
      .setOf(foam.nanos.crunch.UserCapabilityJunction.getOwnClassInfo())
      .setEnableInterfaceDecorators(false)
      .setPm(true)
      .setDecorator(new foam.nanos.crunch.UserCapabilityJunctionExpiredDAO.Builder(x)
        .setDelegate(new foam.nanos.crunch.UserCapabilityJunctionDAO.Builder(x)
          .setDelegate(new foam.dao.NullDAO(x, foam.nanos.crunch.UserCapabilityJunction.getOwnClassInfo()))
          .build())
        .build())
      .build();
  """,
  "client":"""
    {
      "of":"foam.nanos.crunch.UserCapabilityJunction",
      "remoteListenerSupport": false,
      "decorators": [
        {
          "class":"foam.nanos.fs.FileArrayDAODecorator",
          "skipToData": true
        },
        {
          "class":"foam.dao.LockDAO"
        }
      ]
    }
  """
})

p({
  class: "foam.nanos.boot.NSpec",
  name: "userCapabilityJunctionApprovableDAO",
  serve: true,
  serviceScript: `
    dec = new foam.dao.NullDAO(x, foam.nanos.approval.Approvable.getOwnClassInfo());
    dec = new foam.nanos.approval.RestrictedApprovableDAO.Builder(x)
      .setDelegate(dec)
      .setDaoKey("userCapabilityJunctionDAO")
      .setServerDaoKey("userCapabilityJunctionDAO")
      .build();
    return new foam.dao.EasyDAO.Builder(x)
      .setAuthorizer(new foam.nanos.auth.StandardAuthorizer("userCapabilityJunctionApprovable"))
      .setDecorator(dec)
      .setInnerDAO(x.get("approvableDAO"))
      .setOf(foam.nanos.approval.Approvable.getOwnClassInfo())
      .setPm(true)
      .build();
  `,
  client: `
    {
      "of": "foam.nanos.approval.Approvable"
    }
  `
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"bareUserCapabilityJunctionDAO",
  "lazy": false,
  "serviceScript":"""
    dao = new foam.dao.EasyDAO.Builder(x)
      .setPm(true)
      .setRuler(false)
      .setAuthorize(false)
      .setGuid(true)
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("userCapabilityJunctions")
      .setOf(foam.nanos.crunch.UserCapabilityJunction.getOwnClassInfo())
      .build()
      .addPropertyIndex(new foam.core.PropertyInfo[] { foam.nanos.crunch.UserCapabilityJunction.SOURCE_ID, foam.nanos.crunch.UserCapabilityJunction.TARGET_ID })
      .addPropertyIndex(new foam.core.PropertyInfo[] { foam.nanos.crunch.UserCapabilityJunction.TARGET_ID })
      .addPropertyIndex(new foam.core.PropertyInfo[] { foam.nanos.crunch.UserCapabilityJunction.STATUS });
    return dao;
  """,
  "client":
  """
    {
      "of":"foam.nanos.crunch.UserCapabilityJunction",
      "remoteListenerSupport": false
    }
  """
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"deprecatedCapabilityJunctionDAO",
  "serve":true,
  "serviceScript":"""
    dao = new foam.dao.EasyDAO.Builder(x)
      .setAuthorizer(new foam.nanos.auth.GlobalReadAuthorizer("deprecatedCapabilityJunction"))
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("deprecatedCapabilityJunctions")
      .setOf(foam.nanos.crunch.CapabilityCapabilityJunction.getOwnClassInfo())
      .setPm(true)
      .build();
    // TODO: Remove SOURCE_ID index when id index issue resolved
    dao.addPropertyIndex(new foam.core.PropertyInfo[] { foam.nanos.crunch.CapabilityCapabilityJunction.SOURCE_ID });
    dao.addPropertyIndex(new foam.core.PropertyInfo[] { foam.nanos.crunch.CapabilityCapabilityJunction.TARGET_ID });
    return dao;
  """,
  "client":"{\"of\":\"foam.nanos.crunch.CapabilityCapabilityJunction\", \"remoteListenerSupport\": false}"
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"prerequisiteCapabilityJunctionDAO",
  "serve":true,
  "serviceScript":"""
    decorator = new foam.nanos.crunch.PredicatedPrerequisiteCapabilityJunctionDAO.Builder(x).build();
    dao = new foam.dao.EasyDAO.Builder(x)
      .setPm(true)
      .setAuthorizer(new foam.nanos.auth.GlobalReadAuthorizer("prerequisiteCapabilityJunction"))
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("prerequisiteCapabilityJunctions")
      .setOf(foam.nanos.crunch.CapabilityCapabilityJunction.getOwnClassInfo())
      .setOrder(new foam.core.PropertyInfo[] {foam.nanos.crunch.CapabilityCapabilityJunction.PRIORITY})
      .setDecorator(decorator)
      .build();
    // TODO: Remove SOURCE_ID index when id index issue resolved
    dao.addPropertyIndex(new foam.core.PropertyInfo[] { foam.nanos.crunch.CapabilityCapabilityJunction.SOURCE_ID });
    dao.addPropertyIndex(new foam.core.PropertyInfo[] { foam.nanos.crunch.CapabilityCapabilityJunction.TARGET_ID });
    dao.addPropertyIndex(new foam.core.PropertyInfo[] { foam.nanos.crunch.CapabilityCapabilityJunction.PRIORITY });

    return dao;
  """,
  "client":"{\"of\":\"foam.nanos.crunch.CapabilityCapabilityJunction\", \"remoteListenerSupport\": false}"
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "crunchService",
  "serve": true,
  "authenticate": true,
  "boxClass": "foam.nanos.crunch.CrunchServiceSkeleton",
  "serviceClass": "foam.nanos.crunch.ServerCrunchService",
  "client":
    """
      {
        "class": "foam.nanos.crunch.ClientCrunchService",
        "delegate": {
          "class": "foam.box.SessionClientBox",
          "delegate": {
            "class": "foam.box.HTTPBox",
            "url": "service/crunchService"
          }
        }
      }
    """
})

p({
  "class": "foam.nanos.boot.NSpec",
  "name": "userCapabilityJunctionHistoryDAO",
  "description": "DAO containing any modifications made to userCapabilityJunctions",
  "serve": true,
  "lazy": false,
  "enabled":true,
  "authNotes": "Protected by service-level access control. This service requires the 'service.userCapabilityJunctionHistoryDAO' permission to access.",
  "serviceScript":
  """
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.dao.history.HistoryRecord.getOwnClassInfo())
      .setAuthorize(false)
      .setSeqNo(true)
      .setSeqPropertyName("seqNo")
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("userCapabilityJunctionHistory")
      .setSAF(true)
      .setPm(true)
      .setFixedSize(new foam.dao.FixedSizeDAO.Builder(x)
        .setComparator(foam.mlang.MLang.DESC(foam.dao.history.HistoryRecord.TIMESTAMP))
        .setSize(100000)
        .build())
      .build()
      .orderBy(foam.mlang.MLang.DESC(foam.dao.history.HistoryRecord.TIMESTAMP));
  """,
  "client":
  """
    { "of": "foam.dao.history.HistoryRecord" }
  """
})

p({
  "class":"foam.nanos.boot.NSpec",
  "name":"capabilityPayloadDAO",
  "lazy":true,
  "serve":true,
  "serviceScript":"""
    return new foam.dao.EasyDAO.Builder(x)
      .setAuthorize(false)
      .setPermissioned(false)
      .setNullify(true)
      .setDecorator(new foam.nanos.crunch.connection.CapabilityPayloadDAO(x, new foam.dao.NullDAO(x, foam.nanos.crunch.connection.CapabilityPayload.getOwnClassInfo())))
      .setOf(foam.nanos.crunch.connection.CapabilityPayload.getOwnClassInfo())
      .setPm(true)
      .build();
  """,
  "client":"{\"of\":\"foam.nanos.crunch.connection.CapabilityPayload\"}"
})

p({
  class: "foam.nanos.boot.NSpec",
  name: "capabilityPayloadRecordDAO",
  lazy: true,
  serve: true,
  serviceScript: `
    return new foam.dao.EasyDAO.Builder(x)
      .setAuthorize(false)
      .setGuid(true)
      .setOf(foam.nanos.crunch.connection.CapabilityPayloadRecord.getOwnClassInfo())
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("capabilityPayloadRecords")
      .setPm(true)
      .setFixedSize(new foam.dao.FixedSizeDAO.Builder(x)
        .setComparator(foam.mlang.MLang.DESC(foam.nanos.crunch.connection.CapabilityPayloadRecord.CREATED) )
        .setSize(10000)
        .build())
      .build()
      .addPropertyIndex(new foam.core.PropertyInfo[] {foam.nanos.crunch.connection.CapabilityPayloadRecord.CREATED});
  `,
  client: "{\"of\":\"foam.nanos.crunch.connection.CapabilityPayloadRecord\"}"
})

p({
  class: "foam.nanos.boot.NSpec",
  name: "wizardStateDAO",
  lazy: true,
  serve: true,
  serviceScript: `
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.nanos.crunch.ui.WizardState.getOwnClassInfo())
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setJournalName("wizardStates")
      .setPm(true)
      .build();
  `,
  client: "{\"of\":\"foam.nanos.crunch.ui.WizardState\"}"
})
