p({
  class: "foam.nanos.ruler.Rule",
  id: "foam-nanos-er-EventRecordNotificationRule",
  name: "foam-nanos-er-EventRecordNotificationRule",
  ruleGroup: "EventRecord",
  daoKey: "eventRecordDAO",
  after: true,
  priority: 100,
  operation: 0,
  predicate:{
    class: "foam.nanos.ruler.predicate.FScriptRulePredicate",
    query: 'n.severity == foam.log.LogLevel.ERROR'
  },
  lifecycleState:1,
  action: {
    class: "foam.nanos.er.EventRecordNotificationRuleAction"
  }
})

p({
  class: "foam.nanos.ruler.Rule",
  id: "foam-nanos-er-EventRecordAlarmRule",
  name: "foam-nanos-er-EventRecordAlarmRule",
  ruleGroup: "EventRecord",
  daoKey: "eventRecordDAO",
  after: true,
  priority: 110,
  operation: 0,
  predicate:{
    class: "foam.nanos.ruler.predicate.FScriptRulePredicate",
    query: 'n.raiseAlarm == true && n.severity != foam.log.LogLevel.DEBUG'
  },
  lifecycleState:1,
  action: {
    class: "foam.nanos.er.EventRecordAlarmRuleAction"
    alarmSeverity: "WARN"
  }
})

p({
  class: "foam.nanos.ruler.Rule",
  id: "foam-nanos-er-EventRecordSystemOutageRule",
  name: "foam-nanos-er-EventRecordSystemOutageRule",
  ruleGroup: "EventRecord",
  daoKey: "eventRecordDAO",
  after: true,
  operation: 3,
  predicate:{
    class: "foam.nanos.ruler.predicate.FScriptRulePredicate",
    query: 'n.systemOutage exists && (o !exists || o.severity != n.severity)'
  },
  lifecycleState:1,
  action: {
    class: "foam.nanos.er.EventRecordSystemOutageRuleAction"
  }
})
// predicate:{
//   class: "foam.nanos.ruler.predicate.FScriptRulePredicate",
//   query: 'n.systemEvent exists && ((o !exists && (n.severity == foam.log.LogLevel.WARN || n.severity == foam.log.LogLevel.ERROR )) || o.severity != n.severity)'
// },
