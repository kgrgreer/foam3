p({
  class:"foam.nanos.test.Test",
  id:"DAOWAOTest",
  description: "Unit test for DAO Wizardlet Access Object",
  language: 0,
  code:"""
    async function execute(x) {
      try {      
        // CASE: 1 - SAVE FOBJECT AS DATA (NO PATH)
        dw = foam.u2.wizard.DAOWizardlet.create({ of: foam.nanos.auth.User }, x);
        
        dw.data.email = 'francis@filth.com'
        dw.data.userName = 'francis'
        dw.data.group = 'sme'

        resp = await dw.save();

        if ( resp && resp.id ) {
          test(true, 'successful DAOWAO save (no path), user id: ' + resp.id);
        } else {
          test(false, 'failed DAOWAO save (no path)');
        }
       

        // CASE: 2 - LOAD FOBJECT AS DATA (NO PATH)
        dw = foam.u2.wizard.DAOWizardlet.create({ of: foam.nanos.auth.User }, x);

        dw.data.id = resp.id;

        await dw.load();

        if ( dw.data.email === 'francis@filth.com' ) {
          test(true, 'successful DAOWAO load (no path)');
        } else {
          test(false, 'failed DAOWAO load (no path)');
        }


        // CASE: 3 - SAVE DATA WITH NESTED FOBJECT (WITH PATH)
        dw = foam.u2.wizard.DAOWizardlet.create({ of: foam.nanos.crunch.UserCapabilityJunction, path: 'payload' }, x);
        
        ucj = foam.nanos.crunch.UserCapabilityJunction.create({ 
              sourceId: 1348,
              targetId: 'crunch.example',
              data: foam.nanos.crunch.example.ExampleData.create({}),
              status: 1
            }, x);
        dw.data.payload = ucj;

        resp = await dw.save();

        if ( resp && resp.id ) {
          test(true, 'successful DAOWAO save (path), ucj id: ' + resp.id);
        } else {
          test(false, 'failed DAOWAO save (path)');
        }


        // CASE: 4 - LOAD DATA WITH NESTED FOBJECT (WITH PATH)
        resp = resp.clone();
        resp.data.phoneNumber.number = '+123456789';
        await x.userCapabilityJunctionDAO.put(resp);

        await dw.load();

        ucj = dw.data.payload;

        if ( ucj.data && ucj.data.phoneNumber && ucj.data.phoneNumber.number === '+123456789' ) {
          test(true, 'successful DAOWAO load (path)');
        } else {
          test(false, 'failed DAOWAO load (path)');
        }


        // Case: 5 - DISABLE FIND
        resp = resp.clone();
        resp.data.phoneNumber.number = '+99999999';
        await x.userCapabilityJunctionDAO.put(resp);

        dw.wao.disableFind = true;

        await dw.load();

        ucj = dw.data.payload;

        if ( ucj.data && ucj.data.phoneNumber && ucj.data.phoneNumber.number === '+123456789' ) {
          test(true, 'successful DAOWAO disable load');
        } else {
          test(false, 'failed DAOWAO disable load');
        }
      } catch (e) {
        console.error(e.message || e);
      }
    }

    await execute(x);
  """
})
